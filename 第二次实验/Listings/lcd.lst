C51 COMPILER V9.52.0.0   LCD                                                               03/10/2025 20:23:37 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: D:\keilv4_51\C51\BIN\C51.EXE source\source\lcd.c LARGE BROWSE INCDIR(.\source\head file) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\lcd.lst) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include "lcd.h"
   2          #include <intrins.h>
   3          
   4          #define SYSCLK    11059200
   5          //constant definition
   6          uchar code AC_TABLE[]=
   7          {
   8              0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,      //第一行汉字位置
   9              0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,      //第二行汉字位置
  10              0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,0x8f,      //第三行汉字位置
  11              0x98,0x99,0x9a,0x9b,0x9c,0x9d,0x9e,0x9f,      //第四行汉字位置
  12          };
  13          
  14          sbit SCLK=P1^3;
  15          sbit SID=P1^4;
  16          sbit CS=P1^5;
  17          
  18          
  19          void Lcd_Port_Init(void)
  20          {
  21   1          //set P1[5:3] to push_pull model
  22   1          P1MDOUT |= 0x38;
  23   1      
  24   1          //enable crossbar
  25   1          XBR2 |= 0x40;
  26   1      }
  27          
  28          
  29          void LcdInit( void )
  30          {
  31   1          Lcd_Port_Init();
  32   1      
  33   1          WriteCommand(0x30);      //8BitMCU
  34   1          WriteCommand(0x03);      //AC?0,不改变DDRAM值
  35   1          WriteCommand(0x0C);      //显示ON,游标OFF,游标位反白OFF
  36   1          WriteCommand(0x01);      //清屏,AC归0
  37   1          WriteCommand(0x06);      //写入时,游标右移动
  38   1      
  39   1          LcdClear();
  40   1      }
  41          
  42          
  43          void Delay_ms(uint times)
  44          {
  45   1          uint i,j;
  46   1          for (i=0; i<times; i++)
  47   1              for (j=0; j<1300; j++);
  48   1      }
  49          
  50          void Delay(uint k)
  51          {
  52   1          do
  53   1          {
  54   2          }
C51 COMPILER V9.52.0.0   LCD                                                               03/10/2025 20:23:37 PAGE 2   

  55   1          while( --k );
  56   1      }
  57          
  58          
  59          void SendByte(uchar Dbyte)
  60          {
  61   1          uchar i;
  62   1          for(i=0; i<8; i++)
  63   1          {
  64   2              SCLK = 0;
  65   2              Dbyte=Dbyte<<1;      //左移一位
  66   2              SID = CY;            //移出的位给SID
  67   2              SCLK = 1;
  68   2              SCLK = 0;
  69   2          }
  70   1      }
  71          
  72          uchar ReceiveByte(void)
  73          {
  74   1          uchar i, temp1, temp2, temp3;
  75   1          temp1 = 0;
  76   1          temp2 = 0;
  77   1          for(i=0; i<8; i++)
  78   1          {
  79   2              temp1=temp1<<1;
  80   2              SCLK = 0;
  81   2              SCLK = 1;
  82   2              SCLK = 0;
  83   2              if(SID) temp1++;
  84   2          }
  85   1          for(i=0; i<8; i++)
  86   1          {
  87   2              temp2=temp2<<1;
  88   2              SCLK = 0;
  89   2              SCLK = 1;
  90   2              SCLK = 0;
  91   2              if(SID) temp2++;
  92   2          }
  93   1          temp3 = (0xf0&temp1)+(0x0f&temp2);
  94   1          return (temp3);
  95   1      }
  96          
  97          void CheckBusy( void )
  98          {
  99   1          do   SendByte(0xfc);      //11111,RW(1),RS(0),0
 100   1          while(0x80&ReceiveByte());      //BF(.7)=1 Busy
 101   1      }
 102          
 103          void WriteCommand(unsigned char Cbyte )
 104          {
 105   1          CS = 1;
 106   1          CheckBusy();
 107   1          SendByte(0xf8);            //11111,RW(0),RS(0),0
 108   1          SendByte(0xf0&Cbyte);      //高四位
 109   1          SendByte(0xf0&Cbyte<<4);//低四位
 110   1          CS = 0;
 111   1      }
 112          
 113          void WriteData(uchar Dbyte )
 114          {
 115   1          CS = 1;
 116   1          CheckBusy();
C51 COMPILER V9.52.0.0   LCD                                                               03/10/2025 20:23:37 PAGE 3   

 117   1          SendByte(0xfa);            //11111,RW(0),RS(1),0
 118   1          SendByte(0xf0&Dbyte);      //高四位
 119   1          SendByte(0xf0&Dbyte<<4);//低四位(先执行<<)
 120   1          CS = 0;
 121   1      }
 122          
 123          
 124          void LineClear(uchar line)
 125          {
 126   1      
 127   1          uchar i;
 128   1          WriteCommand(0x30);      //8BitMCU
 129   1          WriteCommand(AC_TABLE[8*line]);      //起始位置
 130   1      
 131   1          for(i=0; i<16; i++)
 132   1          {
 133   2              WriteData(0x20);//空格
 134   2          }
 135   1      }
 136          
 137          
 138          void LcdClear( void )
 139          {
 140   1          uchar i;
 141   1          WriteCommand(0x30);      //8BitMCU
 142   1          WriteCommand(0x80);      //AC归起始位
 143   1          for(i=0; i<4; i++)
 144   1          {
 145   2              LineClear(i);
 146   2          }
 147   1      }
 148          
 149          void WriteStr(uchar row,uchar col,uchar *puts)
 150          {
 151   1          WriteCommand(0x30);      //8BitMCU
 152   1          WriteCommand(AC_TABLE[8*row+col]);      //起始位置
 153   1          while(*puts !='\0')      //判断字符串是否显示完毕
 154   1          {
 155   2              if(col==8)            //判断换行
 156   2              {
 157   3                  //若不判断,则自动从第一行到第三行
 158   3                  col=0;
 159   3                  row++;
 160   3              }
 161   2              if(row==4) row=0;      //一屏显示完,回到屏左上角
 162   2              WriteCommand(AC_TABLE[8*row+col]);
 163   2              WriteData(*puts);      //一个汉字要写两次
 164   2              puts++;
 165   2              if(*puts == '\0')
 166   2              {
 167   3                  return;
 168   3              }
 169   2              WriteData(*puts);
 170   2              puts++;
 171   2              col++;
 172   2          }
 173   1      }
 174          
 175          /*
 176          //image init and show
 177          void ImageShow(uchar *imagePtr)
 178          {
C51 COMPILER V9.52.0.0   LCD                                                               03/10/2025 20:23:37 PAGE 4   

 179              uchar i, j, k, columnPosition;
 180              //init
 181          
 182              for(i = 0; i < 2; i++)
 183              {
 184                  columnPosition = 0x80 + 0x08 * i;
 185                  for(j = 0; j < 32; j++)
 186                  {
 187                      for(k = 0; k < 4; k++)
 188                      {
 189                          //RE = 1
 190                          WriteCommand(0x34);
 191                          //set start position
 192                          WriteCommand(0x80 + j);
 193                          WriteCommand(columnPosition + k);
 194          
 195                          //RE = 0
 196                          WriteCommand(0x30);
 197                          //write two bytes continuously
 198                          WriteData(0x00);
 199                          WriteData(0x00);
 200                          //WriteData(0x32);
 201                          //WriteData(0x36);
 202                      }
 203          
 204                      for(k = 4; k < 8; k++)
 205                      {
 206                          //RE = 1
 207                          WriteCommand(0x34);
 208                          //set start position
 209                          WriteCommand(0x80 + j);
 210                          WriteCommand(columnPosition + k);
 211          
 212                          //RE = 0
 213                          WriteCommand(0x30);
 214                          //write two bytes continuously
 215                          WriteData(*imagePtr++);
 216                          WriteData(*imagePtr++);
 217                      }
 218                  }
 219              }
 220              WriteCommand(0x32);
 221              WriteCommand(0x36);
 222          }
 223          */
 224          void ImageShow1(uchar *imagePtr)
 225          {
 226   1          uchar i, j, k, columnPosition;
 227   1          //init
 228   1          for(i = 0; i < 2; i++)
 229   1          {
 230   2              columnPosition = 0x80 + 0x08 * i;
 231   2              for(j = 0; j < 32; j++)
 232   2              {
 233   3                  for(k = 0; k < 8; k++)    //全屏显示
 234   3                  {
 235   4                      //RE = 1
 236   4                      WriteCommand(0x34);
 237   4                      //set start position
 238   4                      WriteCommand(0x80 + j);
 239   4                      WriteCommand(columnPosition + k);
 240   4      
C51 COMPILER V9.52.0.0   LCD                                                               03/10/2025 20:23:37 PAGE 5   

 241   4                      //RE = 1
 242   4                      WriteCommand(0x30);
 243   4                      //write two bytes continuously
 244   4                      WriteData(*imagePtr++);
 245   4                      WriteData(*imagePtr++);
 246   4                  }
 247   3              }
 248   2          }
 249   1          WriteCommand(0x32);
 250   1          WriteCommand(0x36);
 251   1      }
 252          
 253          void LcdShowPoint(unsigned char x)//lcd画电压点图
 254          {
 255   1          unsigned char i;
 256   1          unsigned char col=x/16;
 257   1          unsigned char off=x%16;
 258   1          unsigned char row=wavevalue[x]/128;
 259   1          //unsigned char row=wavevalue[x]/157;
 260   1      
 261   1          unsigned char datah=0;
 262   1          unsigned char datal=0;
 263   1      
 264   1          for(i=0; i<8; i++)
 265   1          {
 266   2              if(i<=off&&wavevalue[col*16+i]/128==row) datah|=0x80>>i;
 267   2              if(i+8<=off&&wavevalue[col*16+8+i]/128==row) datal|=0x80>>i;
 268   2          }
 269   1      
 270   1          WriteCommand(0x34);
 271   1          WriteCommand(0x80+31-row);
 272   1          WriteCommand(0x80+col);
 273   1          WriteCommand(0x30);
 274   1          WriteData(datah);
 275   1          WriteData(datal);
 276   1          WriteCommand(0x32);
 277   1          WriteCommand(0x36);
 278   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    797    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
