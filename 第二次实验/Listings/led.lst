C51 COMPILER V9.52.0.0   LED                                                               03/10/2025 20:23:37 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: D:\keilv4_51\C51\BIN\C51.EXE source\source\led.c LARGE BROWSE INCDIR(.\source\head file) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\led.lst) TABS(2) OBJECT(.\Objects\led.obj)

line level    source

   1          #include "led.h"
   2          
   3          /*selectÒÔ¼°displayº¯Êý£¬ÆäÖÐµÚÒ»¸öÊÇÑ¡ÔñÊýÂë¹Ü£¬´ÓÉÏµ½ÏÂ´Ó×óµ½ÓÒ1-12£¬µÚ¶þ¸öÊÇÏÔÊ¾Êý×Ö*/
   4          
   5          extern int xdata v[10];
   6          extern int xdata u[10];
   7          extern long ADC0_result[2];
   8          extern int w1;
   9          extern int x1;
  10          extern int y1;
  11          extern int z1;
  12          extern int w2;
  13          extern int x2;
  14          extern int y2;
  15          extern int z2;
  16          extern int result;
  17          extern long xdata result2;
  18          extern int w3;
  19          extern int x3;
  20          extern int y3;
  21          extern int z3;
  22          extern volatile unsigned char idata samplepos;
  23          extern volatile long idata slidesum;
  24          
  25          void display(int a)  // ÏÔÊ¾Êý×Ö
  26          {
  27   1        switch(a)
  28   1        {
  29   2          case 0:P7=0xC0;break;
  30   2          case 1:P7=0xF9;break;
  31   2          case 2:P7=0xA4;break;
  32   2          case 3:P7=0xB0;break;
  33   2          case 4:P7=0x99;break;
  34   2          case 5:P7=0x92;break;
  35   2          case 6:P7=0x82;break;
  36   2          case 7:P7=0xF8;break;
  37   2          case 8:P7=0x80;break;
  38   2          case 9:P7=0x90;break;
  39   2          case 10:P7=0x88;break;//A
  40   2          case 11:P7=0x83;break;
  41   2          case 12:P7=0xC6;break;
  42   2          case 13:P7=0xA1;break;
  43   2          case 14:P7=0x86;break;
  44   2          case 15:P7=0x8e;break;
  45   2          default:P7=0xc0;break;
  46   2        }
  47   1      }
  48          
  49          void select(int b)  // Ñ¡ÔñÊýÂë¹Ü
  50          {
  51   1        switch(b)
  52   1        {     
  53   2          case 1: P5 = 0XFE;P6 = 0XFF;break;
  54   2          case 2: P5 = 0XFD;P6 = 0XFF;break;
C51 COMPILER V9.52.0.0   LED                                                               03/10/2025 20:23:37 PAGE 2   

  55   2          case 3: P5 = 0XFB;P6 = 0XFF;break;
  56   2          case 4: P5 = 0XF7;P6 = 0XFF;break;
  57   2          case 5: P5 = 0XEF;P6 = 0XFF;break;
  58   2          case 6: P5 = 0XDF;P6 = 0XFF;break;
  59   2          case 7: P5 = 0XBF;P6 = 0XFF;break;
  60   2          case 8: P5 = 0X77;P6 = 0XFF;break;
  61   2          case 9: P6 = 0XFE;P5 = 0XFF;break;
  62   2          case 10:P6 = 0XFD;P5 = 0XFF;break;
  63   2          case 11:P6 = 0XFB;P5 = 0XFF;break;
  64   2          case 12:P6 = 0XF7;P5 = 0XFF;break;
  65   2        }
  66   1      }
  67          
  68          void Led_Port_Init()
  69          {
  70   1          //set to push_pull model
  71   1          P74OUT &= 0xff;
  72   1      
  73   1          //enable crossbar
  74   1          XBR2 |= 0x40;
  75   1      }
  76          
  77          void LedInit()
  78          {
  79   1        Led_Port_Init();
  80   1        P5 |= 0xff;
  81   1        P6 |= 0x0f;
  82   1        P7 = 0xff;
  83   1      }
  84          
  85          void LedDispNum()  //ÊýÂë¹ÜÏÔÊ¾Êý×Ö
  86          {
  87   1        uchar temp[4];
  88   1        
  89   1        temp[0] = Time_num%10;// ÃëµÄ¸öÎ»
  90   1        temp[1] = Time_num%100/10;
  91   1        temp[2] = Time_num%1000/100;  
  92   1        temp[3] = Time_num/1000;
  93   1      
  94   1        // ×îÉÏ±ßÒ»ÐÐÏÔÊ¾
  95   1        select(4);display(0); Delay(500); P7 = 0xff;
  96   1        select(3);display(0); Delay(500); P7 = 0xff;
  97   1        select(2);display(0); Delay(500); P7 = 0xff;            //¼ÓÐ¡Êýµã
  98   1        select(1);display(0); Delay(500); P7 = 0xff; //³ýÁã
  99   1      
 100   1        // ÖÐ¼äÒ»ÐÐ
 101   1        select(8);display(5); Delay(500); P7 = 0xff;
 102   1        select(7);display(2); Delay(500); P7 = 0xff;
 103   1        select(6);display(0); Delay(500); P7 = 0xff;
 104   1        select(5);display(2); Delay(500); P7 = 0xff;  
 105   1      
 106   1        // ÏÂ±ßÒ»ÐÐ
 107   1        select(12);display(0); Delay(500); P7 = 0xff;
 108   1        select(11);display(1); Delay(500); P7 = 0xff;
 109   1        select(10);display(3); Delay(500); P7 = 0xff;
 110   1        select(9) ;display(0); Delay(500); P7 = 0xff;  
 111   1      }
 112          
 113          
 114          /*.ËãÊõÆ½¾ùÂË²¨
 115          ·½·¨½âÎö£º
 116          Á¬ÐøÈ¡N¸ö²ÉÑùÖµ½øÐÐÆ½¾ùÔËËã£¬NÖµ½Ï´óÊ±£ºÐÅºÅÆ½»¬¶È½Ï¸ß£¬µ«ÁéÃô¶È½ÏµÍ
C51 COMPILER V9.52.0.0   LED                                                               03/10/2025 20:23:37 PAGE 3   

 117          NÖµ½ÏÐ¡Ê±£ºÐÅºÅÆ½»¬¶È½ÏµÍ£¬µ«ÁéÃô¶È½Ï¸ß¡£NÖµµÄÑ¡È¡£ºÒ»°ã12×óÓÒ¡£
 118          ÓÅµã£º
 119          ÊÊÓ¦ÓÚ¶ÔÒ»°ã¾ßÓÐËæ»ú¸ÉÈÅµÄÐÅºÅ½øÐÐÂË²¨£¬ÕâÑùÐÅºÅµÄÌØµãÊÇÓÐÒ»¸öÆ½¾ùÖµ£¬ÐÅºÅÔÚÄ³Ò»ÊýÖµ·¶Î§¸½½üÉÏÏÂ²¨¶¯
 120          È±µã£º
 121          ¶ÔÓÚ²âÁ¿ËÙ¶È½ÏÂý»òÒªÇóÊý¾Ý¼ÆËãËÙ¶È½Ï¿ìµÄÊµÊ±¿ØÖÆ²¢²»ÊÊÓÃ£¬±È½ÏÀË·ÑRAM*/
 122          
 123          void Average_filter(void)//ËãÊõÆ½¾ùÂË²¨
 124          {
 125   1        long i = 0,t = 0;
 126   1        long sum = 0;
 127   1        for ( i = 0 ; i < 10 ; i++ )
 128   1        {
 129   2           //sum = sum + (int)(ADC0_result[1]-270)*1.101;
 130   2           sum = sum + v[i];    
 131   2        }
 132   1        t = sum /10; 
 133   1        w1 =  t*5/4096;
 134   1        x1 = (t*50)/4096-w1*10;
 135   1        y1 = (t*500)/4096-w1*100-x1*10;
 136   1        z1 = (t*5000)/4096-w1*1000-x1*100-y1*10;
 137   1        /*w1 =  t/1000;
 138   1        x1 = (t - w1*1000)/100;
 139   1        y1 = (t - w1*1000-x1*100)/10;
 140   1        z1 =  t - w1*1000-x1*100-y1*10; */
 141   1        result=(int)(t);
 142   1        result2=t*5000/4096;
 143   1        //return t;
 144   1      }
 145          /*.ÖÐÎ»ÖµÆ½¾ùÂË²¨·¨£¨·ÀÂö³å¸ÉÈÅÆ½¾ùÂË²¨·¨£©
 146          ·½·¨½âÎö£º
 147          Ïàµ±ÓÚÖÐÎ»ÖµÂË²¨+ËãÊõÆ½¾ùÂË²¨£¬Á¬Ðø²ÉÑùN¸öÊý¾Ý£¬È¥µôÒ»¸ö×î´óÖµºÍÒ»¸ö×îÐ¡Öµ£¬È»ºó¼ÆËãN-2¸öÊý¾ÝµÄËãÊõÆ½¾ùÖµ¡
             -£
 148          NÖµµÄÑ¡È¡£º3-14
 149          ÓÅµã£ºÈÚºÏÁËÁ½ÖÖÂË²¨·¨µÄÓÅµã
 150          ¶ÔÓÚÅ¼È»³öÏÖµÄÂö³åÐÔ¸ÉÈÅ£¬¿ÉÏû³ýÓÉÓÚÂö³å¸ÉÈÅËùÒýÆðµÄ²ÉÑùÖµÆ«²î¡£
 151          È±µã£º
 152          ²âÁ¿ËÙ¶È½ÏÂý£¬ºÍËã·¨Æ½¾ùÂË²¨Ò»Ñù£¬ÀË·ÑRAM¡£*/
 153          void Median_average_filter(void)//ÖÐÖµÆ½¾ùÂË²¨
 154          {
 155   1        long i,sum, average,max,min;
 156   1        average = 0;
 157   1        max = v[0];
 158   1        min = max;
 159   1        sum = 0;
 160   1        for ( i = 0; i<10;i++)
 161   1         {
 162   2            sum = sum + v[i];
 163   2            if(v[i] > max)
 164   2            {
 165   3              max = v[i];
 166   3            }
 167   2            if(v[i] < min)
 168   2            {
 169   3              min = v[i];
 170   3            } 
 171   2         }
 172   1        sum = sum - max -min;
 173   1        average = sum /8 ;
 174   1        w1 =  average*5/4096;
 175   1        x1 = (average*50)/4096-w1*10;
 176   1        y1 = (average*500)/4096-w1*100-x1*10;
 177   1        z1 = (average*5000)/4096-w1*1000-x1*100-y1*10;
C51 COMPILER V9.52.0.0   LED                                                               03/10/2025 20:23:37 PAGE 4   

 178   1        /*w1 =  average/1000;
 179   1        x1 = (average-w1*1000)/100;
 180   1        y1 = (average - w1*1000-x1*100)/10;
 181   1        z1 =  average - w1*1000-x1*100-y1*10; */
 182   1        result=(int)(average);
 183   1         result2=average*5000/4096;
 184   1        //return average;
 185   1      }
 186          /*£¨»¬¶¯Æ½¾ùÂË²¨·¨£©
 187          ·½·¨½âÎö£º
 188          °ÑÁ¬ÐøÈ¡N¸ö²ÉÑùÖµ¿´³ÉÒ»¸ö¶ÓÁÐ£¬¶ÓÁÐµÄ³¤¶È¹Ì¶¨ÎªN£¬Ã¿´Î²ÉÑùµ½Ò»¸öÐÂÊý¾Ý·ÅÈë¶ÓÎ²£¬²¢ÈÓµôÔ­À´¶ÓÊ×µÄÒ»´ÎÊý¾Ý£¨
             -ÏÈ½øÏÈ³ö£©¡£
 189          °Ñ¶ÓÁÐÖÐµÄN¸öÊý¾Ý½øÐÐËãÊõÆ½¾ùÔËËã£¬¾Í¿É»ñµÃÐÂµÄÂË²¨½á¹û¡£NÖµµÄÑ¡È¡£ºÒ»°ã12.
 190          ÓÅµã£º
 191          ¶ÔÖÜÆÚÐÔ¸ÉÈÅÓÐÁ¼ºÃµÄÒÖÖÆ×÷ÓÃ£¬Æ½»¬¶È¸ß£¬ÊÊÓ¦ÓÚ¸ßÆµÕñµ´µÄÏµÍ³
 192          È±µã£º
 193          ÁéÃô¶ÈµÍ£¬¶ÔÅ¼È»³öÏÖµÄÂö³åÐÔ¸ÉÈÅµÄÒÖÖÆ×÷ÓÃ½Ï²î¡£²»Ò×Ïû³ýÓÉÓÚÂö³å¸ÉÈÅËùÒýÆð´òµÄ²ÉÑùÖµÆ«²î£¬²»ÊÊÓÃÓÚÂö³å¸ÉÈÅ
             -±È½ÏÑÏÖØµÄ³¡ºÏ
 194          ÀË·ÑRAM*/
 195            int i = 0;
 196          void Sliding_filter(void)//»¬¶¯Æ½¾ùÂË²¨
 197          {
 198   1        long s;
 199   1      //  int count;
 200   1      //  int sum=0;
 201   1      //  i++;
 202   1      //  v[i] = (int)(ADC0_result[1]-270)*1.101;
 203   1      //  if ( i == 12 ) i = 0;
 204   1      //  for ( count = 1;count < 13;count++) sum = sum + v[count];
 205   1      
 206   1        slidesum-=v[samplepos];
 207   1        slidesum+=v[(samplepos+9)%10];
 208   1        s = slidesum /9;
 209   1        //if(s<0) s=0;
 210   1        if(s>4095) s=4095;
 211   1        //s = s/4096*5000;
 212   1        w1 =  s*5/4096;
 213   1        x1 = (s*50)/4096-w1*10;
 214   1        y1 = (s*500)/4096-w1*100-x1*10;
 215   1        z1 = (s*5000)/4096-w1*1000-x1*100-y1*10;
 216   1        /*w1 =  s/1000;
 217   1        x1 = (s-w1*1000)/100;
 218   1        y1 = (s - w1*1000-x1*100)/10;
 219   1        z1 =  s - w1*1000-x1*100-y1*10;*/
 220   1        result=(int)(s);
 221   1        result2=s*5000/4096;
 222   1        //return s;
 223   1      }
 224          
 225          /*µÚ 2 ÖÖ·½·¨ ÖÐÎ»ÖµÂË²¨·¨
 226          A ·½·¨
 227          Á¬Ðø²ÉÑù N ´Î£¨N È¡ÆæÊý£©°Ñ N ´Î²ÉÑùÖµ°´´óÐ¡ÅÅÁÐÈ¡ÖÐ¼äÖµÎª±¾´ÎÓÐÐ§Öµ
 228          B ÓÅµã
 229          ÄÜÓÐÐ§¿Ë·þÒòÅ¼È»ÒòËØÒýÆðµÄ²¨¶¯¸ÉÈÅ¶ÔÎÂ¶È¡¢ÒºÎ»µÄ±ä»¯»ºÂýµÄ±»²â²ÎÊýÓÐÁ¼ºÃµÄÂË²¨Ð§¹û
 230          C È±µã
 231          ¶ÔÁ÷Á¿¡¢ËÙ¶ÈµÈ¿ìËÙ±ä»¯µÄ²ÎÊý²»ÒË
 232          D ÊµÀý³ÌÐò
 233          N Öµ¿É¸ù¾ÝÊµ¼ÊÇé¿öµ÷Õû
 234          ÅÅÐò²ÉÓÃÃ°ÅÝ·¨*/
 235          /*void Median_filter()
 236          {
 237            int i,j,temp,mid;
C51 COMPILER V9.52.0.0   LED                                                               03/10/2025 20:23:37 PAGE 5   

 238            for (j=0;j<10-1;j++)
 239            {
 240              for (i=0;i<10-j;i++)
 241              {
 242                if ( u[i]>u[i+1] )
 243                {
 244                temp = u[i];
 245                u[i] = u[i+1];
 246                u[i+1] = temp;
 247                }
 248              }
 249            }
 250            mid = (int)(u[4]+u[5])/2 +1;
 251          
 252            w3 =  mid/1000;
 253            x3 = (mid-w3*1000)/100;
 254            y3 = (mid - w3*1000-x3*100)/10;
 255            z3 =  mid - w3*1000-x3*100-y3*10; 
 256          }    */
 257          
 258          /* ÏÞ·ùÂË²¨·¨£¨ÓÖ³Æ³ÌÐòÅÐ¶ÏÂË²¨·¨£©
 259          A ·½·¨
 260          ¸ù¾Ý¾­ÑéÅÐ¶Ï£¬È·¶¨Á½´Î²ÉÑùÔÊÐíµÄ×î´óÆ«²îÖµ£¨ÉèÎª A£©Ã¿´Î¼ì²âµ½ÐÂÖµÊ±ÅÐ¶Ï£ºÈç¹û±¾´ÎÖµÓëÉÏ´ÎÖµ
 261          Ö®²î<=A,Ôò±¾´ÎÖµÓÐÐ§Èç¹û±¾´ÎÖµÓëÉÏ´ÎÖµÖ®²î>A,Ôò±¾´ÎÖµÎÞÐ§,·ÅÆú±¾´ÎÖµ,ÓÃÉÏ´ÎÖµ´úÌæ±¾´ÎÖµ
 262          B ÓÅµã
 263          ÄÜÓÐÐ§¿Ë·þÒòÅ¼È»ÒòËØÒýÆðµÄÂö³å¸ÉÈÅ
 264          C È±µã
 265          ÎÞ·¨ÒÖÖÆÄÇÖÖÖÜÆÚÐÔµÄ¸ÉÈÅÆ½»¬¶È²î
 266          D ÊµÀý³ÌÐò
 267          /* A Öµ¿É¸ù¾ÝÊµ¼ÊÇé¿öµ÷Õû
 268          value ÎªÓÐÐ§Öµ£¬new_value Îªµ±Ç°²ÉÑùÖµ
 269          ÂË²¨³ÌÐò·µ»ØÓÐÐ§µÄÊµ¼ÊÖµ */
 270          
 271          //void Limiting_filter()
 272          //{
 273          //int new_value;
 274          //new_value = (int)(ADC0_result[1]-270)*1.101;
 275          //if ( ( new_value - value > A ) || ( value - new_value > A )
 276          //return value;
 277          //return new_value;
 278          //}
 279          
 280          
 281          void show_f_row(void)
 282          {
 283   1        select(1);display(w1);P7 = P7 & ~0x80;Delay(500); P7 = 0xff;
 284   1        select(2);display(x1);Delay(500); P7 = 0xff;
 285   1        select(3);display(y1);Delay(500); P7 = 0xff;
 286   1        select(4);display(z1);Delay(500); P7 = 0xff;
 287   1      }
 288          void show_s_row(void)
 289          {
 290   1        select(5);display(w2);P7 = P7 & ~0x80;Delay(500); P7 = 0xff;
 291   1        select(6);display(x2);Delay(500); P7 = 0xff;
 292   1        select(7);display(y2);Delay(500); P7 = 0xff;
 293   1        select(8);display(z2);Delay(500); P7 = 0xff;
 294   1      }
 295          void show_t_row(void)
 296          {
 297   1        select(9);display(w3);P7 = P7 & ~0x80;Delay(500); P7 = 0xff;
 298   1        select(10);display(x3);Delay(500); P7 = 0xff;
 299   1        select(11);display(y3);Delay(500); P7 = 0xff;
C51 COMPILER V9.52.0.0   LED                                                               03/10/2025 20:23:37 PAGE 6   

 300   1        select(12);display(z3);Delay(500); P7 = 0xff;
 301   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2844    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2      40
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
