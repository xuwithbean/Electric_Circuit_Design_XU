C51 COMPILER V9.52.0.0   MAIN                                                              03/10/2025 19:24:35 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keilv4_51\C51\BIN\C51.EXE source\source\main.c BROWSE INCDIR(.\source\head file) DEBUG OBJECTEXT
                    -END PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <stdio.h>
   2          #include <string.h>
   3          
   4          #include "c8051f020.h"
   5          #include "lcd.h"
   6          //#include "led.h"
   7          #include "xjtu_image.h"
   8          //#include "111.h"
   9          //#include "222.h"
  10          //#include "xjtu_image.h"
  11          
  12          #define SYSCLK    11059200
  13          
  14          #define TIMER_PRESCALER            12  // Based on Timer CKCON settings
  15          
  16          #define LED_TOGGLE_RATE            100 // LED toggle rate in milliseconds
  17                                                 // if LED_TOGGLE_RATE = 1, the LED will
  18                                                 // be on for 1 millisecond and off for
  19                                                 // 1 millisecond
  20          
  21          // There are SYSCLK/TIMER_PRESCALER timer ticks per second, so
  22          // SYSCLK/TIMER_PRESCALER/1000 timer ticks per millisecond.
  23          #define TIMER_TICKS_PER_MS  SYSCLK/TIMER_PRESCALER/1000
  24          
  25          // Note: LED_TOGGLE_RATE*TIMER_TICKS_PER_MS should not exceed 65535 (0xFFFF)
  26          // for the 16-bit timer
  27          
  28          #define AUX1     TIMER_TICKS_PER_MS*LED_TOGGLE_RATE
  29          #define AUX2     -AUX1
  30          #define AUX3     AUX2&0x00FF
  31          #define AUX4     ((AUX2&0xFF00)>>8)
  32          
  33          #define TIMER0_RELOAD_HIGH       AUX4  // Reload value for Timer0 high byte
  34          #define TIMER0_RELOAD_LOW        AUX3  // Reload value for Timer0 low byte
  35          
  36          
  37          sbit INT1 = P0^3;
  38          uchar code str0[]="西安交通大学";
  39          uchar code str1[]="左键Triangular";
  40          uchar code str2[]="中间键方波";
  41          uchar code str3[]="右键sin";
  42          //global variable
  43          //char buffer[17];
  44          void Timer2_Init (void);//定时器2初始化
  45          void DAC0_Init(void);//DA初始化
  46          long  DAC0_result[1];
  47          void Delay_us(unsigned int times)
  48          {
  49   1        unsigned int i,j;
  50   1        
  51   1        for (i = 0; i< times; i++)
  52   1        {
  53   2          for (j = 0; j < 11; j++)
  54   2          {
C51 COMPILER V9.52.0.0   MAIN                                                              03/10/2025 19:24:35 PAGE 2   

  55   3            _nop_();
  56   3          }
  57   2        }
  58   1      }
  59          void Port_IO_Init()
  60          {
  61   1        //set P4[1] to push_pull model
  62   1          P74OUT |= 0x01;
  63   1        
  64   1        //enable crossbar
  65   1          XBR2 |= 0x40;
  66   1      
  67   1          //close the alam P4.1
  68   1          P4 &= 0xfd;
  69   1        
  70   1        //uart1,int1
  71   1        XBR1 |= 0x14;
  72   1        XBR2 |= 0x44;
  73   1      }
  74          
  75          void Oscillator_Init()
  76          {
  77   1          int i = 0;
  78   1          OSCXCN    = 0x67;
  79   1          for (i = 0; i < 3000; i++);  // Wait 1ms for initialization
  80   1          while ((OSCXCN & 0x80) == 0);
  81   1          OSCICN    = 0x08;
  82   1      }
  83          void Interrupt_Init()
  84          {
  85   1        //INT1
  86   1        //low level triggle
  87   1        IT1 = 0;
  88   1        //enable INT1
  89   1        EX1 = 1;
  90   1        //enable all interrupt
  91   1        EA = 1;
  92   1      }
  93          
  94          void Init_Device(void)
  95          {
  96   1          //disable watchdog
  97   1          EA = 0;
  98   1          WDTCN = 0xde;
  99   1          WDTCN = 0xad;
 100   1          EA = 1;
 101   1        
 102   1          Oscillator_Init();
 103   1          Port_IO_Init();
 104   1      //  Timer0_Init();
 105   1        
 106   1        Interrupt_Init();
 107   1        
 108   1          LcdInit();
 109   1      //  LedInit();
 110   1      }
 111          
 112          
 113          //-----------------------------------------------------------------------------
 114          // 主程序
 115          //-----------------------------------------------------------------------------
 116          uchar  waveflag=0;
C51 COMPILER V9.52.0.0   MAIN                                                              03/10/2025 19:24:35 PAGE 3   

 117          unsigned int vvalue=0;
 118          code unsigned int sinn[64]={2048,2252,2454,2653,2845,3029,3204,3367,
 119                                      3517,3652,3771,3873,3956,4021,4066,4090,
 120                                      4095,4078,4042,3986,3910,3815,3703,3575,
 121                                      3431,3273,3103,2923,2734,2537,2337,2133,
 122                                      1929,1725,1525,1330,1142,963,795,640,499,
 123                                      373,264,172,100,47,13,1,8,36,85,152,239,
 124                                      344,466,604,756,921,1097,1283,1476,1675,
 125                                      1878,2082};
 126          bit ifstart=0;
 127          
 128          uchar column=0;
 129          uchar Position=0;
 130          void main()
 131          { 
 132   1          Init_Device(); 
 133   1        Timer2_Init ();
 134   1        DAC0_Init();
 135   1      //  EX1=1;
 136   1      //  EA=1;
 137   1        INT1=1;
 138   1        DAC0_result[0]=0;
 139   1        ClearAll();
 140   1        WriteStr(0, 0, str0);
 141   1        WriteStr(1, 0, str1);
 142   1        WriteStr(2, 0, str2);
 143   1        WriteStr(3, 0, str3);
 144   1          while(1)
 145   1          {
 146   2            P5 = 0xFB;Delay_us(5);
 147   2            P5 = 0xFD;Delay_us(5);
 148   2            P5 = 0xFE;Delay_us(5);
 149   2       }
 150   1      }
 151          
 152          void INT1_ISR(void) interrupt 2
 153          {
 154   1        switch (P5)
 155   1          {case 0xfb:
 156   2             LcdClear();
 157   2              waveflag=1;
 158   2              break;
 159   2              case 0xfd:
 160   2               LcdClear();  
 161   2            DAC0_result[0]=0;
 162   2              waveflag=2;
 163   2              break;
 164   2              case 0xfe:
 165   2               LcdClear();  
 166   2              waveflag=3;
 167   2              break;
 168   2            default:break;
 169   2          }
 170   1      }
 171          
 172          //---------------------------------------------
 173          //DAC0初始化
 174          //---------------------------------------------
 175          
 176          void DAC0_Init(void)
 177          {
 178   1          REF0CN = 0x03;                   // 使用内部VREF发生器
C51 COMPILER V9.52.0.0   MAIN                                                              03/10/2025 19:24:35 PAGE 4   

 179   1          DAC0CN = 0x98;
 180   1        DAC0L=0x00;
 181   1        DAC0H=0x00;                   // 打开DAC0，右对齐模式
 182   1      }
 183          
 184          //---------------------------------------------
 185          //定时器2初始化
 186          //为DA0转换提供
 187          //---------------------------------------------
 188          
 189          void Timer2_Init (void)
 190          {
 191   1          RCAP2H=0x10;
 192   1          RCAP2L=0x00;
 193   1          TH2=0x10;
 194   1          TL2=0x00;
 195   1          T2CON=0x04;
 196   1          IE|= 0x20;
 197   1      }
 198          //----------------------------------------------
 199          // 定时器2中断服务
 200          //----------------------------------------------
 201          
 202          int placelast=0;
 203          
 204          void Time2_ISR(void) interrupt 5 
 205          {
 206   1          unsigned int xdata temp;
 207   1          vvalue=(vvalue+1)%64;
 208   1        switch(waveflag)
 209   1        {
 210   2        case 1:DAC0_result[0]=vvalue*64;break;
 211   2        case 2:if(vvalue==0)DAC0_result[0]=4095-DAC0_result[0];break;
 212   2        case 3:DAC0_result[0]=sinn[vvalue];break;
 213   2        default:DAC0_result[0]=0;break; 
 214   2        }
 215   1      
 216   1          TF2=0;
 217   1          temp=DAC0_result[0];
 218   1          temp&=0x00ff;
 219   1          DAC0L=temp;
 220   1          temp=DAC0_result[0];
 221   1          temp>>=8;
 222   1          DAC0H=temp;
 223   1      
 224   1        if(waveflag)
 225   1        {
 226   2            int i,place=DAC0_result[0]/128;
 227   2            int dir=(place>placelast)?1:-1;
 228   2            if(column==0&&Position==0)ClearAll();
 229   2          for(i=placelast;i!=place;i+=dir){
 230   3             if(column<8){
 231   4             toshow[62-i*2]|=(0x80>>column);
 232   4             }
 233   3             else 
 234   3               {toshow[62-i*2+1]|=(0x80>>(column-8));}
 235   3                  WriteCommand(0x34);
 236   3              WriteCommand(0x80+31-i);//row :0~32
 237   3              WriteCommand(0x80+Position);//column  :80~87uphalf;88~8fdownhalf
 238   3              WriteCommand(0x30);
 239   3              WriteData(toshow[62-i*2]);
 240   3              WriteData(toshow[62-i*2+1]);
C51 COMPILER V9.52.0.0   MAIN                                                              03/10/2025 19:24:35 PAGE 5   

 241   3          }
 242   2          if(column==0)memset(toshow,0,sizeof(uchar)*64);
 243   2          if(column<8){toshow[62-place*2]|=(0x80>>column);}
 244   2          else {toshow[62-place*2+1]|=(0x80>>(column-8));}
 245   2                  
 246   2      
 247   2              WriteCommand(0x32);
 248   2                    WriteCommand(0x36);
 249   2          column++;
 250   2          if(column==16){column=0;Position=(Position+1)%8;}
 251   2          placelast=place;
 252   2        }
 253   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    934    ----
   CONSTANT SIZE    =    175    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     75       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
