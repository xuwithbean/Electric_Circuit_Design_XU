C51 COMPILER V9.52.0.0   LED                                                               02/27/2025 18:08:51 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE source\source\led.c BROWSE INCDIR(.\source\head file) DEBUG OBJECTEXTEND PR
                    -INT(.\Listings\led.lst) TABS(2) OBJECT(.\Objects\led.obj)

line level    source

   1          #include "led.h"
   2          
   3          uchar code LED_NUM[] =
   4          {
   5              0xc0, 0xf9, 0xa4, 0xb0, 0x99,
   6              0x92, 0x82, 0xf8, 0x80, 0x90,
   7              0x11, 0x22
   8          };
   9          
  10          //chip select
  11          //1,P5[3:1]
  12          //2,P5[7:4]
  13          //3,P6[3:1]
  14          
  15          //segment select
  16          //P7[7:0]
  17          
  18          void Led_Port_Init()
  19          {
  20   1          //set to push_pull model
  21   1          P74OUT &= 0xff;
  22   1      
  23   1          //enable crossbar
  24   1          XBR2 |= 0x40;
  25   1      }
  26          
  27          void LedInit()
  28          {
  29   1        Led_Port_Init();
  30   1        P5 |= 0xff;
  31   1        P6 |= 0x0f;
  32   1        P7 = 0xff;
  33   1      }
  34          
  35          void LedDispNum(uchar row, uint num)
  36          {
  37   1        uchar bitnum;
  38   1        uchar i, tempNum;
  39   1        uint temp = 1;
  40   1        
  41   1        if(num / 1000)
  42   1        {
  43   2          bitnum = 4;
  44   2        }
  45   1        else if(num / 100)
  46   1        {
  47   2          bitnum = 3;
  48   2        }
  49   1        else if(num / 10)
  50   1        {
  51   2          bitnum = 2;
  52   2        }
  53   1        else
  54   1        {
C51 COMPILER V9.52.0.0   LED                                                               02/27/2025 18:08:51 PAGE 2   

  55   2          bitnum = 1;
  56   2        }
  57   1        
  58   1          switch (row)
  59   1        {
  60   2          case 0:
  61   2          {
  62   3            for(i = 0; i < 4; i++)
  63   3            {
  64   4              tempNum = (num / temp) % 10;
  65   4              temp *= 10;
  66   4              
  67   4              if(tempNum == 0 && i + 1 > bitnum && i != 0)
  68   4              {
  69   5                P7 = 0xff;
  70   5              }else
  71   4              {
  72   5                P7 = LED_NUM[tempNum];
  73   5              }
  74   4              
  75   4              //prepare the num to show first, then select specific chip
  76   4              P5 = 0xff - (1 << (3 - i));
  77   4              Delay(800);
  78   4              //clear shadow
  79   4              P7 = 0xff;
  80   4              P5 = 0xff;
  81   4            }
  82   3            break;
  83   3          }
  84   2          case 1:
  85   2          {
  86   3            for(i = 0; i < 4; i++)
  87   3            {
  88   4              tempNum = (num / temp) % 10;
  89   4              temp *= 10;
  90   4              
  91   4              if(tempNum == 0 && i + 1 > bitnum && i != 0)
  92   4              {
  93   5                P7 = 0xff;
  94   5              }else
  95   4              {
  96   5                P7 = LED_NUM[tempNum];
  97   5              }
  98   4              
  99   4              //prepare the num to show first, then select specific chip
 100   4              P5 = 0xff - (1 << (7 - i));
 101   4              Delay(500);
 102   4              //clear shadow
 103   4              P7 = 0xff;
 104   4              P5 = 0xff;
 105   4            }
 106   3            break;
 107   3          }
 108   2          case 2:
 109   2          {
 110   3            for(i = 0; i < 4; i++)
 111   3            {
 112   4              tempNum = (num / temp) % 10;
 113   4              temp *= 10;
 114   4              
 115   4              if(tempNum == 0 && i + 1 > bitnum && i != 0)
 116   4              {
C51 COMPILER V9.52.0.0   LED                                                               02/27/2025 18:08:51 PAGE 3   

 117   5                P7 = 0xff;
 118   5              }else
 119   4              {
 120   5                P7 = LED_NUM[tempNum];
 121   5              }
 122   4              
 123   4              //prepare the num to show first, then select specific chip
 124   4              P6 = 0x0f - (1 << (3 - i));
 125   4              Delay(500);
 126   4              //clear shadow
 127   4              P7 = 0xff;
 128   4              P6 = 0x0f;
 129   4            }
 130   3            break;
 131   3          }
 132   2        }
 133   1      
 134   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    487    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
