C51 COMPILER V9.52.0.0   LCD                                                               04/03/2024 19:11:28 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE source\source\lcd.c BROWSE INCDIR(.\source\head file) DEBUG OBJECTEXTEND PR
                    -INT(.\Listings\lcd.lst) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include "lcd.h"
   2          #include <intrins.h>
   3          
   4          //constant definition
   5          uchar code AC_TABLE[]=
   6          {
   7              0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,      //第一行汉字位置
   8              0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,      //第二行汉字位置
   9              0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,0x8f,      //第三行汉字位置
  10              0x98,0x99,0x9a,0x9b,0x9c,0x9d,0x9e,0x9f,      //第四行汉字位置
  11          };
  12          
  13          sbit SCLK=P1^3;
  14          sbit SID=P1^4;
  15          sbit CS=P1^5;
  16          
  17          
  18          void Lcd_Port_Init(void)
  19          {
  20   1        //set P1[5:3] to push_pull model
  21   1          P1MDOUT |= 0x38;
  22   1        
  23   1        //enable crossbar
  24   1          XBR2 |= 0x40;
  25   1      }
  26          
  27          
  28          void LcdInit( void )
  29          {
  30   1          Lcd_Port_Init();
  31   1      
  32   1          WriteCommand(0x30);      //8BitMCU
  33   1          WriteCommand(0x03);      //AC?0,不改变DDRAM值
  34   1          WriteCommand(0x0C);      //显示ON,游标OFF,游标位反白OFF
  35   1          WriteCommand(0x01);      //清屏,AC归0
  36   1          WriteCommand(0x06);      //写入时,游标右移动
  37   1      
  38   1          LcdClear();
  39   1      }
  40          
  41          
  42          void Delay_ms(uint times)
  43          {
  44   1          uint i,j;
  45   1          for (i=0; i<times; i++)
  46   1              for (j=0; j<1300; j++);
  47   1      }
  48          
  49          
  50          
  51          
  52          void SendByte(uchar Dbyte)
  53          {
  54   1          uchar i;
C51 COMPILER V9.52.0.0   LCD                                                               04/03/2024 19:11:28 PAGE 2   

  55   1          for(i=0; i<8; i++)
  56   1          {
  57   2              SCLK = 0;
  58   2              Dbyte=Dbyte<<1;      //左移一位
  59   2              SID = CY;            //移出的位给SID
  60   2              SCLK = 1;
  61   2              SCLK = 0;
  62   2          }
  63   1      }
  64          
  65          uchar ReceiveByte(void)
  66          {
  67   1          uchar i, temp1, temp2, temp3;
  68   1          temp1 = 0;
  69   1          temp2 = 0;
  70   1          for(i=0; i<8; i++)
  71   1          {
  72   2              temp1=temp1<<1;
  73   2              SCLK = 0;
  74   2              SCLK = 1;
  75   2              SCLK = 0;
  76   2              if(SID) temp1++;
  77   2          }
  78   1          for(i=0; i<8; i++)
  79   1          {
  80   2              temp2=temp2<<1;
  81   2              SCLK = 0;
  82   2              SCLK = 1;
  83   2              SCLK = 0;
  84   2              if(SID) temp2++;
  85   2          }
  86   1        temp3 = (0xf0&temp1)+(0x0f&temp2);
  87   1          return (temp3);
  88   1      }
  89          
  90          void CheckBusy( void )
  91          {
  92   1          do   SendByte(0xfc);      //11111,RW(1),RS(0),0
  93   1          while(0x80&ReceiveByte());      //BF(.7)=1 Busy
  94   1      }
  95          
  96          void WriteCommand(unsigned char Cbyte )
  97          {
  98   1          CS = 1;
  99   1          CheckBusy();
 100   1          SendByte(0xf8);            //11111,RW(0),RS(0),0
 101   1          SendByte(0xf0&Cbyte);      //高四位
 102   1          SendByte(0xf0&Cbyte<<4);//低四位
 103   1          CS = 0;
 104   1      }
 105          
 106          void WriteData(uchar Dbyte )
 107          {
 108   1          CS = 1;
 109   1          CheckBusy();
 110   1          SendByte(0xfa);            //11111,RW(0),RS(1),0
 111   1          SendByte(0xf0&Dbyte);      //高四位
 112   1          SendByte(0xf0&Dbyte<<4);//低四位(先执行<<)
 113   1          CS = 0;
 114   1      }
 115          
 116          
C51 COMPILER V9.52.0.0   LCD                                                               04/03/2024 19:11:28 PAGE 3   

 117          void LineClear(uchar line)
 118          {
 119   1      
 120   1          uchar i;
 121   1          WriteCommand(0x30);      //8BitMCU
 122   1          WriteCommand(AC_TABLE[8*line]);      //起始位置
 123   1      
 124   1          for(i=0; i<16; i++)
 125   1          {
 126   2              WriteData(0x20);//空格
 127   2          }
 128   1      }
 129          
 130          
 131          void LcdClear( void )
 132          {
 133   1          uchar i;
 134   1          for(i=0; i<4; i++)
 135   1          {
 136   2              LineClear(i);
 137   2          }
 138   1      }
 139          
 140          void WriteChar(uchar row,uchar col,uchar ch)
 141          {
 142   1        WriteCommand(0x30);      //8BitMCU
 143   1        WriteCommand(AC_TABLE[8*row+col]);      //起始位置
 144   1        WriteData(ch);
 145   1      }
 146          
 147          void WriteStr(uchar row,uchar col,uchar *puts)
 148          {
 149   1          WriteCommand(0x30);      //8BitMCU
 150   1          WriteCommand(AC_TABLE[8*row+col]);      //起始位置
 151   1          while(*puts !='\0')      //判断字符串是否显示完毕
 152   1          {
 153   2              if(col==8)            //判断换行
 154   2              {
 155   3                  //若不判断,则自动从第一行到第三行
 156   3                  col=0;
 157   3                  row++;
 158   3              }
 159   2              if(row==4) row=0;      //一屏显示完,回到屏左上角
 160   2              WriteCommand(AC_TABLE[8*row+col]);
 161   2              WriteData(*puts);      //一个汉字要写两次
 162   2              puts++;
 163   2              if(*puts == '\0')
 164   2              {
 165   3                  return;
 166   3              }
 167   2              WriteData(*puts);
 168   2              puts++;
 169   2              col++;
 170   2          }
 171   1      }
 172          
 173          
 174          //image  show
 175          void ImageShow1(uchar *imagePtr)
 176          {
 177   1        uchar i, j, k, columnPosition;
 178   1        //init
C51 COMPILER V9.52.0.0   LCD                                                               04/03/2024 19:11:28 PAGE 4   

 179   1      
 180   1        for(i = 0; i < 2; i++)
 181   1        {
 182   2          columnPosition = 0x80 + 0x08 * i;
 183   2          for(j = 0; j < 32; j++)
 184   2          { 
 185   3            for(k = 0; k < 8; k++)    //全屏显示
 186   3            {
 187   4              //RE = 1
 188   4              WriteCommand(0x34);
 189   4              //set start position
 190   4              WriteCommand(0x80 + j);
 191   4              WriteCommand(columnPosition + k);
 192   4              
 193   4              //RE = 1
 194   4              WriteCommand(0x30);
 195   4              //write two bytes continuously
 196   4              WriteData(*imagePtr++);
 197   4              WriteData(*imagePtr++);
 198   4            }
 199   3          }
 200   2        }
 201   1        WriteCommand(0x32);
 202   1        WriteCommand(0x36);
 203   1      }
 204          void ImageShow2(uchar *imagePtr)
 205          {
 206   1        uchar i, j, k, columnPosition;
 207   1        //init
 208   1      
 209   1        for(i = 0; i < 2; i++)
 210   1        {
 211   2          columnPosition = 0x80 + 0x08 * i;
 212   2          for(j = 0; j < 32; j++)
 213   2          {
 214   3            
 215   3        for(k = 0; k < 4; k++)   
 216   3            {
 217   4              //RE = 1
 218   4              WriteCommand(0x34);
 219   4              //set start position
 220   4              WriteCommand(0x80 + j);
 221   4              WriteCommand(columnPosition + k);
 222   4              
 223   4              //RE = 0
 224   4              WriteCommand(0x30);
 225   4              //write two bytes continuously
 226   4              WriteData(0x00);
 227   4              WriteData(0x00);
 228   4            }
 229   3            
 230   3            for(k = 4; k < 8; k++)    //右半屏显示
 231   3            {
 232   4              //RE = 1
 233   4              WriteCommand(0x34);
 234   4              //set start position
 235   4              WriteCommand(0x80 + j);
 236   4              WriteCommand(columnPosition + k);
 237   4              
 238   4              //RE = 1
 239   4              WriteCommand(0x30);
 240   4              //write two bytes continuously
C51 COMPILER V9.52.0.0   LCD                                                               04/03/2024 19:11:28 PAGE 5   

 241   4              WriteData(*imagePtr++);
 242   4              WriteData(*imagePtr++);
 243   4            }
 244   3          }
 245   2        }
 246   1        WriteCommand(0x32);
 247   1        WriteCommand(0x36);
 248   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    658    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
